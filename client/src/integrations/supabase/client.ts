// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jxkbcyxzfnmnnawkwknn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp4a2JjeXh6Zm5tbm5hd2t3a25uIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYwNTAwOTMsImV4cCI6MjA3MTYyNjA5M30.dFzzYqDhMFuRwqIp-m9_dIYlMUKqny6ZDavPvQwbPIw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create the client with default auth configuration. We'll export the JSON-enabled
// client below as `supabase` so all callers get the proper Accept header.

// Ensure the PostgREST client sends Accept: application/json to avoid 406 responses
// Some environments or proxies may require explicit Accept header for JSON responses.
// We can't mutate the internals of the generated client directly, but createClient
// supports a `global.headers` option. Add it here so all requests include the header.
// Note: keep this change minimal and safe for environments that expect text/html for
// other endpoints â€” our API is JSON-first so this is appropriate.
// If you need to customize per-request headers later, use supabase.rpc/postgrest client wrappers.
export const supabaseWithJson = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    headers: {
      Accept: 'application/json'
    }
  }
});

// Export the original client as default `supabase` for backwards compatibility, but prefer
// `supabaseWithJson` for calls that require explicit Accept header. For now, set both to the
// JSON-enabled client so existing code picks up the header without changes.
// This replaces the earlier `supabase` binding with the header-enabled client.
export const supabase = supabaseWithJson;